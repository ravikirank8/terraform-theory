🧮 Arithmetic Operators

| Operator | Description        | Example       |
| -------- | ------------------ | ------------- |
| `+`      | Addition           | `2 + 3` → `5` |
| `-`      | Subtraction        | `5 - 2` → `3` |
| `*`      | Multiplication     | `2 * 3` → `6` |
| `/`      | Division           | `6 / 2` → `3` |
| `%`      | Modulo (remainder) | `5 % 2` → `1` |

✅ Example: All Together
In prod, it creates 2 large instances
In dev, 1 small instance

variable "env" {
  default = "dev"
}

resource "aws_instance" "web" {
  count         = var.env == "prod" ? 2 : 1
  ami           = "ami-123456"
  instance_type = var.env == "prod" ? "t3.large" : "t3.micro"

  tags = {
    Environment = var.env
  }
}

============
count 

variable "count" {
  default = 2
}

output "double_count" {
  value = var.count * 2  # → 4
}

🧮 Comparison Operators
| Operator | Description      | Example           |
| -------- | ---------------- | ----------------- |
| `==`     | Equal            | `1 == 1` → `true` |
| `!=`     | Not equal        | `1 != 2` → `true` |
| `>`      | Greater than     | `3 > 2` → `true`  |
| `<`      | Less than        | `2 < 3` → `true`  |
| `>=`     | Greater or equal | `3 >= 3` → `true` |
| `<=`     | Less or equal    | `2 <= 3` → `true` |

🧮 Logical Operators
| Operator | Description            | Example                   |            |        |   |                |
| -------- | ---------------------- | ------------------------- | ---------- | ------ | - | -------------- |
| `&&`     | Logical AND            | `true && false` → `false` |            |        |   |                |
| \`       |                        | \`                        | Logical OR | \`true |   | false`→`true\` |
| `!`      | Logical NOT (negation) | `!true` → `false`         |            |        |   |                |

❓ 2. Conditional Expressions (Ternary Operator)
condition ? true_value : false_value
variable "environment" {
  default = "prod"
}

output "instance_type" {
  value = var.environment == "prod" ? "t3.large" : "t3.micro"
}
If environment is "prod" → output is "t3.large"
Otherwise → "t3.micro"


🎯 Real-Life Use Case: Conditional Count
variable "create_resource" {
  default = true
}

resource "aws_s3_bucket" "example" {
  count  = var.create_resource ? 1 : 0
  bucket = "my-conditional-bucket-123"
  acl    = "private"
}
If create_resource is true → 1 bucket is created
If false → no bucket is created


| Use Case                      | Operator/Expression Used        |
| ----------------------------- | ------------------------------- |
| Set a value based on env      | `var.env == "prod" ? "x" : "y"` |
| Create resource conditionally | `count = var.enabled ? 1 : 0`   |
| Combine booleans              | `var.a && var.b`                |
| Number math                   | `var.replicas * 2`              |


Variables, Resource Attributes and Dependencies

