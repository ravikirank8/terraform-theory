🔷 Dynamic Blocks
💡 What is it?
A dynamic block lets you create repeated nested blocks (like ingress, egress, etc.) based on a variable or list, so you don’t have to manually write them out.

🧠 Why use it?
Use it when you need to loop over a list to create similar blocks inside a resource.

🔷 Splat Expressions
💡 What is it?
A splat expression is a shortcut to get a list of values from a list of resources or objects.

🧠 Why use it?
When you have multiple similar resources and want to extract a specific field from all of them — use splats.


| What You're Doing                      | Terraform Feature Used  | Why It Helps                                 |
| -------------------------------------- | ----------------------- | -------------------------------------------- |
| Opening many ports in a Security Group | `dynamic` block         | Cleaner config, less duplication             |
| Getting public IPs of all instances    | Splat (`[*].public_ip`) | Quick access to info from multiple resources |


🧱 PART 1: DYNAMIC BLOCK (Step-by-Step)

✅ Goal:
Create a security group that opens multiple ports (80, 443, 22) without repeating code.

🔹 STEP 1: Define the variable
You want to allow traffic on different ports. Define a list of ports using a variable:

variable "ports" {
  default = [80, 443, 22]
}
This is like saying:
“Hey Terraform, here are the ports I want to open.”


🔹 STEP 2: Use the dynamic block inside the resource
resource "aws_security_group" "web_sg" {
  name = "web-sg"

  dynamic "ingress" {
    for_each = var.ports  # loop through each port in the list
    content {
      from_port   = ingress.value  # value of the current port
      to_port     = ingress.value
      protocol    = "tcp"
      cidr_blocks = ["0.0.0.0/0"]
    }
  }
}

Here’s what each part means:
dynamic "ingress": We’re dynamically creating multiple ingress blocks.
for_each = var.ports: Loop over the list [80, 443, 22].
ingress.value: The current port from the loop.
The block will be repeated 3 times, once for each port.

🧾 What it generates behind the scenes:
variable "ports" {
  default = [80, 443, 22]
}
With this dynamic block:
dynamic "ingress" {
  for_each = var.ports
  content {
    from_port   = ingress.value
    to_port     = ingress.value
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
}
Will generate:
ingress {
  from_port   = 80
  to_port     = 80
  protocol    = "tcp"
  cidr_blocks = ["0.0.0.0/0"]
}

ingress {
  from_port   = 443
  to_port     = 443
  protocol    = "tcp"
  cidr_blocks = ["0.0.0.0/0"]
}

ingress {
  from_port   = 22
  to_port     = 22
  protocol    = "tcp"
  cidr_blocks = ["0.0.0.0/0"]
}
But you didn't have to write them all manually. Cleaner and safer.

===================

✨ PART 2: SPLAT EXPRESSIONS (Step-by-Step)

✅ Goal:
Launch 3 EC2 instances and get a list of all their public IPs.

🔹 STEP 1: Launch multiple EC2 instances
resource "aws_instance" "app" {
  count         = 3
  ami           = "ami-123456"
  instance_type = "t2.micro"
}

count = 3: Creates 3 EC2 instances.
aws_instance.app[0], [1], [2]: Refer to each one.

🔹 STEP 2: Output all their public IPs using a splat
output "all_public_ips" {
  value = aws_instance.app[*].public_ip
}
aws_instance.app[*]: Means "all instances"
.public_ip: Grab only the public_ip from each one

You will get like this:
[
  "54.12.34.56",
  "54.65.78.90",
  "18.222.111.222"
]
